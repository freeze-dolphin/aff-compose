package com.tairitsu.compose.arcaea

import com.tairitsu.compose.arcaea.antlr.PropertiesLexer
import com.tairitsu.compose.arcaea.antlr.PropertiesParser
import kotlinx.serialization.encodeToString
import kotlinx.serialization.json.Json
import org.antlr.v4.runtime.CharStreams
import org.antlr.v4.runtime.CommonTokenStream
import kotlin.test.Test
import kotlin.test.assertEquals

class ANTLRTest {

    private val json = Json {
        prettyPrint = true
    }

    private fun testAffAndPrint(aff: String, printAsAff: Boolean = true) {
        val crlfAff = aff.replace(Regex(System.lineSeparator()), "\r\n")

        if (!printAsAff) {
            println(json.encodeToString(ANTLRChartParser.fromAff(crlfAff)))
        } else {
            println(json.encodeToString(ANTLRChartParser.fromAff(crlfAff)).let {
                val chart: Chart = json.decodeFromString(it)
                chart.serializeForArcaea()
            })
        }
    }

    private fun testAcfAndPrint(acf: String, printAsAff: Boolean = true) {
        val crlfAcf = acf.replace(Regex(System.lineSeparator()), "\r\n")

        val parsed = ANTLRChartParser.fromAcf(crlfAcf)

        if (!printAsAff) {
            println(json.encodeToString(parsed.first))
        } else {
            println(json.encodeToString(parsed.first).let {
                val chart: Chart = json.decodeFromString(it)
                chart.serializeForArcCreate()
            })
        }

        println("\n\nIgnored scenecontrols (${parsed.second.ignoredScenecontrols.size}):\n")
        parsed.second.ignoredScenecontrols.forEach {
            println("${it.first}, ${it.second}")
        }

        println("\nIgnored timinggroup effects (${parsed.second.ignoredTimingGroupEffects.size}):\n")
        parsed.second.ignoredTimingGroupEffects.forEach {
            println("${it.first}, ${it.second}")
        }
    }

    @Test
    fun `arcaea chart antlr test`() {
        """
        AudioOffset:-600
        TimingPointDensityFactor:1
        Version:1.0
        -
        timing(0,126.00,4.00);
        scenecontrol(19045,trackhide);
        (1,2);
        arc(19045,19045,0.00,1.00,s,1.00,1.00,3,none,false);
        scenecontrol(40960,redline,1.88,0);
        arc(17140,19045,0.00,1.00,s,1.00,1.00,3,none,false)[arctap(17140),arctap(19045)];
        arc(19045,19045,0.00,1.00,s,1.00,1.00,3,none,false);
        timinggroup(fadingholds_anglex3600){
            timing(0,126.00,4.00);
            hold(17140,18807,4);
            arc(17140,19045,0.00,1.00,si,1.00,1.00,0,none,true)[arctap(17140),arctap(19045)];
            arc(17140,18569,0.00,0.50,siso,1.00,0.00,0,none,true)[arctap(18569)];
            arc(17140,18093,0.00,0.25,siso,1.00,0.25,0,none,true)[arctap(18093)];
            arc(17140,17616,0.00,0.00,siso,1.00,0.50,0,none,true);
            hold(19045,20712,4);
            arc(19045,20712,-0.25,1.50,b,1.00,0.00,0,none,true);
            arc(19045,20712,1.25,-0.50,b,1.00,0.00,1,none,false);
        };
        """.trimIndent().let {
            testAffAndPrint(it)
        }
    }

    @Test
    fun `arccreate chart antlr test`() {
        Thread.currentThread().contextClassLoader.getResource("distortedfate.acf")
            ?.readText()?.trimIndent().let {
                testAcfAndPrint(it!!)
            }
    }

    @Test
    fun `arccreate timinggroup name test`() {
        testAcfAndPrint(
            """
            AudioOffset:0
            -
            timing(0,186.00,4.00);
            timinggroup(name="glass"){
              timing(0,0.00,4.00);
              scenecontrol(-10000,hidegroup,0,1);
              arc(45161,45565,0.00,1.00,si,1.00,1.00,0,a,false);
            };
        """.trimIndent()
        )
    }

    @Test
    fun `arccreate timing not first command test`() {
        testAcfAndPrint(
            """
            timinggroup(name="glass"){
              scenecontrol(-10000,hidegroup,0,1);
              timing(0,0.00,4.00);
              scenecontrol(0,hidegroup,0,1);
              scenecontrol(66461,hidegroup,0,0);
              timing(66462,-2.00,4.00);
              scenecontrol(66502,hidegroup,0,1);
              scenecontrol(66543,hidegroup,0,0);
              scenecontrol(66564,hidegroup,0,1);
              scenecontrol(66585,hidegroup,0,0);
              timing(95654,-2.25,4.00);
              timing(95705,-2.50,4.00);
              timing(95756,-3.00,4.00);
              scenecontrol(95769,hidegroup,0,1);
              timing(95807,-3.50,4.00);
              scenecontrol(95810,hidegroup,0,0);
              scenecontrol(95855,hidegroup,0,1);
              scenecontrol(95896,hidegroup,0,0);
              timing(95908,-4.00,4.00);
              scenecontrol(95917,hidegroup,0,1);
              scenecontrol(95959,hidegroup,0,0);
              timing(96000,-10000.00,4.00);
              scenecontrol(96000,hidegroup,0,1);
              timing(96001,0.00,4.00);
              scenecontrol(155077,hidegroup,0,0);
              timing(155078,-2.00,4.00);
              scenecontrol(155103,hidegroup,0,1);
              scenecontrol(155129,hidegroup,0,0);
              scenecontrol(155155,hidegroup,0,1);
              scenecontrol(155181,hidegroup,0,0);
              scenecontrol(170769,hidegroup,0,1);
              scenecontrol(170870,hidegroup,0,0);
              scenecontrol(170971,hidegroup,0,1);
              scenecontrol(171072,hidegroup,0,0);
              scenecontrol(171123,hidegroup,0,1);
              scenecontrol(171174,hidegroup,0,0);
              scenecontrol(171225,hidegroup,0,1);
              scenecontrol(171276,hidegroup,0,0);
              scenecontrol(171327,hidegroup,0,1);
              scenecontrol(171378,hidegroup,0,0);
              scenecontrol(171429,hidegroup,0,1);
              scenecontrol(171480,hidegroup,0,0);
              scenecontrol(171531,hidegroup,0,1);
              scenecontrol(171557,hidegroup,0,0);
              scenecontrol(171583,hidegroup,0,1);
              scenecontrol(171609,hidegroup,0,0);
              scenecontrol(171635,hidegroup,0,1);
              scenecontrol(171661,hidegroup,0,0);
              scenecontrol(171687,hidegroup,0,1);
              timing(173538,32.50,4.00);
              arc(173538,173566,-0.75,-0.63,s,1.25,1.00,0,none,true);
              arc(173538,173595,-0.75,-0.88,s,1.25,2.00,0,none,true);
              arc(173538,173596,2.22,2.22,s,0.20,0.20,0,none,true);
              arc(173538,173596,-1.12,-1.12,s,0.16,0.16,0,none,true);
              arc(173538,173596,-0.93,-0.93,s,1.58,1.58,0,none,true);
              arc(173538,173596,2.05,2.05,s,1.61,1.61,0,none,true);
              arc(173566,173595,-0.63,-0.63,s,1.00,1.25,0,none,true);
              arc(173595,173624,-0.88,-0.75,s,2.00,1.50,0,none,true);
              arc(173595,173653,-0.63,-0.63,s,1.25,1.25,0,none,true);
              arc(173624,173653,-0.75,-0.63,s,1.50,1.25,0,none,true);
              arc(173769,173797,2.25,2.13,s,-0.25,0.00,1,none,true);
              arc(173769,173798,-1.06,-1.31,s,-0.13,-0.38,0,none,true);
              arc(173769,173826,2.25,2.38,s,-0.25,-1.00,1,none,true);
              arc(173769,173826,-0.90,-0.90,s,1.01,1.01,0,none,true);
              arc(173769,173826,1.66,1.66,s,1.67,1.67,0,none,true);
              arc(173769,173826,-1.04,-1.04,s,0.78,0.78,0,none,true);
              arc(173769,173826,2.32,2.32,s,0.67,0.67,0,none,true);
              arc(173769,173827,-1.06,-1.13,s,-0.13,-0.50,0,none,true);
              arc(173797,173826,2.13,2.13,s,0.00,-0.25,1,none,true);
              arc(173798,173827,-1.31,-1.25,s,-0.38,-0.50,0,none,true);
              arc(173826,173855,2.38,2.25,s,-1.00,-0.50,1,none,true);
              arc(173826,173884,2.13,2.13,s,-0.25,-0.25,1,none,true);
              arc(173827,173856,-1.25,-1.38,s,-0.50,-0.88,0,none,true);
              arc(173827,173885,-1.13,-1.00,s,-0.50,-0.50,0,none,true);
              arc(173855,173884,2.25,2.13,s,-0.50,-0.25,1,none,true);
              arc(173856,173885,-1.38,-1.00,s,-0.88,-0.50,0,none,true);
              arc(173999,174027,1.75,1.63,s,1.25,1.00,1,none,true);
              arc(173999,174056,1.75,1.88,s,1.25,2.00,1,none,true);
              arc(174000,174057,1.61,1.61,s,-0.11,-0.11,0,none,true);
              arc(174000,174057,-0.86,-0.86,s,1.99,1.99,0,none,true);
              arc(174000,174057,1.80,1.80,s,0.22,0.22,0,none,true);
              arc(174000,174057,-1.16,-1.16,s,1.19,1.19,0,none,true);
              arc(174027,174056,1.63,1.63,s,1.00,1.25,1,none,true);
              arc(174056,174085,1.88,1.75,s,2.00,1.50,1,none,true);
              arc(174056,174114,1.63,1.63,s,1.25,1.25,1,none,true);
              arc(174085,174114,1.75,1.63,s,1.50,1.25,1,none,true);
              arc(174230,174258,-1.25,-1.13,s,-0.25,0.00,0,none,true);
              arc(174230,174287,-1.25,-1.38,s,-0.25,-1.00,0,none,true);
              arc(174230,174288,-1.05,-1.05,s,1.41,1.41,0,none,true);
              arc(174230,174288,1.84,1.84,s,1.99,1.99,0,none,true);
              arc(174230,174288,-0.75,-0.75,s,1.99,1.99,0,none,true);
              arc(174230,174288,2.47,2.47,s,1.90,1.90,0,none,true);
              arc(174231,174260,2.41,2.19,s,-0.63,-0.56,1,none,true);
              arc(174231,174289,2.41,2.16,s,-0.63,-0.38,1,none,true);
              arc(174258,174287,-1.13,-1.13,s,0.00,-0.25,0,none,true);
              arc(174260,174289,2.19,1.94,s,-0.56,-0.63,1,none,true);
              arc(174287,174316,-1.38,-1.25,s,-1.00,-0.50,0,none,true);
              arc(174287,174345,-1.13,-1.13,s,-0.25,-0.25,0,none,true);
              arc(174289,174318,1.94,2.03,s,-0.63,-0.38,1,none,true);
              arc(174289,174347,2.16,1.91,s,-0.38,-0.19,1,none,true);
              arc(174316,174345,-1.25,-1.13,s,-0.50,-0.25,0,none,true);
              arc(174318,174347,2.03,1.91,s,-0.38,-0.19,1,none,true);
              arc(174461,174490,-0.91,-0.69,s,1.63,1.56,0,none,true);
              arc(174461,174519,-0.94,-0.94,s,1.33,1.33,0,none,true);
              arc(174461,174519,-0.91,-0.66,s,1.63,1.38,0,none,true);
              arc(174461,174519,2.10,2.10,s,-0.03,-0.03,0,none,true);
              arc(174461,174519,2.09,2.09,s,0.12,0.12,0,none,true);
              arc(174461,174519,-0.93,-0.93,s,0.96,0.96,0,none,true);
              arc(174490,174519,-0.69,-0.44,s,1.56,1.63,0,none,true);
              arc(174519,174548,-0.44,-0.53,s,1.63,1.38,0,none,true);
              arc(174519,174577,-0.66,-0.41,s,1.38,1.19,0,none,true);
              arc(174548,174577,-0.53,-0.41,s,1.38,1.19,0,none,true);
              arc(174692,174721,-1.06,-1.31,s,-0.13,-0.38,0,none,true);
              arc(174692,174750,1.60,1.60,s,1.54,1.54,0,none,true);
              arc(174692,174750,2.11,2.11,s,1.67,1.67,0,none,true);
              arc(174692,174750,-1.27,-1.27,s,-0.14,-0.14,0,none,true);
              arc(174692,174750,-0.79,-0.79,s,-0.13,-0.13,0,none,true);
              arc(174692,174750,-1.06,-1.13,s,-0.13,-0.50,0,none,true);
              arc(174721,174750,-1.31,-1.25,s,-0.38,-0.50,0,none,true);
              arc(174750,174779,-1.25,-1.38,s,-0.50,-0.88,0,none,true);
              arc(174750,174808,-1.13,-1.00,s,-0.50,-0.50,0,none,true);
              arc(174779,174808,-1.38,-1.00,s,-0.88,-0.50,0,none,true);
              arc(174923,174952,2.06,2.31,s,1.13,1.38,1,none,true);
              arc(174923,174952,2.41,2.19,s,-0.63,-0.56,1,none,true);
              arc(174923,174980,-0.57,-0.57,s,1.40,1.40,0,none,true);
              arc(174923,174980,-0.56,-0.56,s,1.13,1.13,0,none,true);
              arc(174923,174980,1.90,1.90,s,1.89,1.89,0,none,true);
              arc(174923,174980,1.56,1.56,s,1.18,1.18,0,none,true);
              arc(174923,174981,2.41,2.16,s,-0.63,-0.38,1,none,true);
              arc(174923,174981,2.06,2.13,s,1.13,1.50,1,none,true);
              arc(174952,174981,2.31,2.25,s,1.38,1.50,1,none,true);
              arc(174952,174981,2.19,1.94,s,-0.56,-0.63,1,none,true);
              arc(174981,175010,2.25,2.38,s,1.50,1.88,1,none,true);
              arc(174981,175010,1.94,2.03,s,-0.63,-0.38,1,none,true);
              arc(174981,175039,2.13,2.00,s,1.50,1.50,1,none,true);
              arc(174981,175039,2.16,1.91,s,-0.38,-0.19,1,none,true);
              arc(175010,175039,2.03,1.91,s,-0.38,-0.19,1,none,true);
              arc(175010,175039,2.38,2.00,s,1.88,1.50,1,none,true);
              arc(175153,175211,-0.95,-0.95,s,1.62,1.62,0,none,true);
              arc(175153,175211,1.84,1.84,s,1.44,1.44,0,none,true);
              arc(175153,175211,-0.82,-0.82,s,1.37,1.37,0,none,true);
              arc(175153,175211,1.71,1.71,s,0.18,0.18,0,none,true);
              arc(175154,175183,-0.56,-0.81,s,1.13,1.38,0,none,true);
              arc(175154,175212,-0.56,-0.63,s,1.13,1.50,0,none,true);
              arc(175183,175212,-0.81,-0.75,s,1.38,1.50,0,none,true);
              arc(175212,175241,-0.75,-0.88,s,1.50,1.88,0,none,true);
              arc(175212,175270,-0.63,-0.50,s,1.50,1.50,0,none,true);
              arc(175241,175270,-0.88,-0.50,s,1.88,1.50,0,none,true);
              arc(175384,175412,1.75,1.63,s,1.25,1.00,1,none,true);
              arc(175384,175441,1.75,1.88,s,1.25,2.00,1,none,true);
              arc(175384,175442,1.93,1.93,s,1.58,1.58,1,none,true);
              arc(175384,175442,2.12,2.12,s,0.16,0.16,1,none,true);
              arc(175384,175442,-1.05,-1.05,s,1.61,1.61,1,none,true);
              arc(175384,175442,-1.22,-1.22,s,0.20,0.20,1,none,true);
              arc(175412,175441,1.63,1.63,s,1.00,1.25,1,none,true);
              arc(175441,175470,1.88,1.75,s,2.00,1.50,1,none,true);
              arc(175441,175499,1.63,1.63,s,1.25,1.25,1,none,true);
              arc(175470,175499,1.75,1.63,s,1.50,1.25,1,none,true);
              arc(175615,175643,-1.25,-1.13,s,-0.25,0.00,0,none,true);
              arc(175615,175644,2.06,2.31,s,-0.13,-0.38,1,none,true);
              arc(175615,175672,-1.32,-1.32,s,0.67,0.67,1,none,true);
              arc(175615,175672,-0.66,-0.66,s,1.67,1.67,1,none,true);
              arc(175615,175672,2.04,2.04,s,0.78,0.78,1,none,true);
              arc(175615,175672,1.90,1.90,s,1.01,1.01,1,none,true);
              arc(175615,175672,-1.25,-1.38,s,-0.25,-1.00,0,none,true);
              arc(175615,175673,2.06,2.13,s,-0.13,-0.50,1,none,true);
              arc(175643,175672,-1.13,-1.13,s,0.00,-0.25,0,none,true);
              arc(175644,175673,2.31,2.25,s,-0.38,-0.50,1,none,true);
              arc(175672,175701,-1.38,-1.25,s,-1.00,-0.50,0,none,true);
              arc(175672,175730,-1.13,-1.13,s,-0.25,-0.25,0,none,true);
              arc(175673,175702,2.25,2.38,s,-0.50,-0.88,1,none,true);
              arc(175673,175731,2.13,2.00,s,-0.50,-0.50,1,none,true);
              arc(175701,175730,-1.25,-1.13,s,-0.50,-0.25,0,none,true);
              arc(175702,175731,2.38,2.00,s,-0.88,-0.50,1,none,true);
              arc(175845,175873,-0.75,-0.63,s,1.25,1.00,0,none,true);
              arc(175845,175902,-0.75,-0.88,s,1.25,2.00,0,none,true);
              arc(175846,175903,-0.61,-0.61,s,-0.11,-0.11,1,none,true);
              arc(175846,175903,1.86,1.86,s,1.99,1.99,1,none,true);
              arc(175846,175903,-0.80,-0.80,s,0.22,0.22,1,none,true);
              arc(175846,175903,2.16,2.16,s,1.19,1.19,1,none,true);
              arc(175873,175902,-0.63,-0.63,s,1.00,1.25,0,none,true);
              arc(175902,175931,-0.88,-0.75,s,2.00,1.50,0,none,true);
              arc(175902,175960,-0.63,-0.63,s,1.25,1.25,0,none,true);
              arc(175931,175960,-0.75,-0.63,s,1.50,1.25,0,none,true);
              arc(176076,176104,2.25,2.13,s,-0.25,0.00,1,none,true);
              arc(176076,176133,2.25,2.38,s,-0.25,-1.00,1,none,true);
              arc(176076,176134,2.05,2.05,s,1.41,1.41,1,none,true);
              arc(176076,176134,-1.47,-1.47,s,1.90,1.90,1,none,true);
              arc(176076,176134,1.75,1.75,s,1.99,1.99,1,none,true);
              arc(176076,176134,-0.84,-0.84,s,1.99,1.99,1,none,true);
              arc(176077,176106,-1.41,-1.19,s,-0.63,-0.56,0,none,true);
              arc(176077,176135,-1.41,-1.16,s,-0.63,-0.38,0,none,true);
              arc(176104,176133,2.13,2.13,s,0.00,-0.25,1,none,true);
              arc(176106,176135,-1.19,-0.94,s,-0.56,-0.63,0,none,true);
              arc(176133,176162,2.38,2.25,s,-1.00,-0.50,1,none,true);
              arc(176133,176191,2.13,2.13,s,-0.25,-0.25,1,none,true);
              arc(176135,176164,-0.94,-1.03,s,-0.63,-0.38,0,none,true);
              arc(176135,176193,-1.16,-0.91,s,-0.38,-0.19,0,none,true);
              arc(176162,176191,2.25,2.13,s,-0.50,-0.25,1,none,true);
              arc(176164,176193,-1.03,-0.91,s,-0.38,-0.19,0,none,true);
              arc(176307,176336,1.91,1.69,s,1.63,1.56,1,none,true);
              arc(176307,176365,1.91,1.66,s,1.63,1.38,1,none,true);
              arc(176307,176365,1.94,1.94,s,1.33,1.33,1,none,true);
              arc(176307,176365,-1.10,-1.10,s,-0.03,-0.03,1,none,true);
              arc(176307,176365,1.93,1.93,s,0.96,0.96,1,none,true);
              arc(176307,176365,-1.09,-1.09,s,0.12,0.12,1,none,true);
              arc(176336,176365,1.69,1.44,s,1.56,1.63,1,none,true);
              arc(176365,176394,1.44,1.53,s,1.63,1.38,1,none,true);
              arc(176365,176423,1.66,1.41,s,1.38,1.19,1,none,true);
              arc(176394,176423,1.53,1.41,s,1.38,1.19,1,none,true);
              arc(176538,176567,2.06,2.31,s,-0.13,-0.38,1,none,true);
              arc(176538,176596,-0.60,-0.60,s,1.54,1.54,1,none,true);
              arc(176538,176596,2.27,2.27,s,-0.14,-0.14,1,none,true);
              arc(176538,176596,1.79,1.79,s,-0.13,-0.13,1,none,true);
              arc(176538,176596,-1.11,-1.11,s,1.67,1.67,1,none,true);
              arc(176538,176596,2.06,2.13,s,-0.13,-0.50,1,none,true);
              arc(176567,176596,2.31,2.25,s,-0.38,-0.50,1,none,true);
              arc(176596,176625,2.25,2.38,s,-0.50,-0.88,1,none,true);
              arc(176596,176654,2.13,2.00,s,-0.50,-0.50,1,none,true);
              arc(176625,176654,2.38,2.00,s,-0.88,-0.50,1,none,true);
              arc(176769,176798,-1.41,-1.19,s,-0.63,-0.56,0,none,true);
              arc(176769,176798,-1.06,-1.31,s,1.13,1.38,0,none,true);
              arc(176769,176826,-0.56,-0.56,s,1.18,1.18,1,none,true);
              arc(176769,176826,-0.90,-0.90,s,1.89,1.89,1,none,true);
              arc(176769,176826,1.57,1.57,s,1.40,1.40,1,none,true);
              arc(176769,176826,1.56,1.56,s,1.13,1.13,1,none,true);
              arc(176769,176827,-1.41,-1.16,s,-0.63,-0.38,0,none,true);
              arc(176769,176827,-1.06,-1.13,s,1.13,1.50,0,none,true);
              arc(176798,176827,-1.19,-0.94,s,-0.56,-0.63,0,none,true);
              arc(176798,176827,-1.31,-1.25,s,1.38,1.50,0,none,true);
              arc(176827,176856,-0.94,-1.03,s,-0.63,-0.38,0,none,true);
              arc(176827,176856,-1.25,-1.38,s,1.50,1.88,0,none,true);
              arc(176827,176885,-1.16,-0.91,s,-0.38,-0.19,0,none,true);
              arc(176827,176885,-1.13,-1.00,s,1.50,1.50,0,none,true);
              arc(176856,176885,-1.03,-0.91,s,-0.38,-0.19,0,none,true);
              arc(176856,176885,-1.38,-1.00,s,1.88,1.50,0,none,true);
              arc(176999,177057,-0.71,-0.71,s,0.18,0.18,1,none,true);
              arc(176999,177057,-0.84,-0.84,s,1.44,1.44,1,none,true);
              arc(176999,177057,1.95,1.95,s,1.62,1.62,1,none,true);
              arc(176999,177057,1.82,1.82,s,1.37,1.37,1,none,true);
              arc(177000,177029,1.56,1.81,s,1.13,1.38,1,none,true);
              arc(177000,177058,1.56,1.63,s,1.13,1.50,1,none,true);
              arc(177029,177058,1.81,1.75,s,1.38,1.50,1,none,true);
              arc(177058,177087,1.75,1.88,s,1.50,1.88,1,none,true);
              arc(177058,177116,1.63,1.50,s,1.50,1.50,1,none,true);
              arc(177087,177116,1.88,1.50,s,1.88,1.50,1,none,true);
              arc(177231,177259,-0.75,-0.63,s,1.25,1.00,0,none,true);
              arc(177231,177288,-0.75,-0.88,s,1.25,2.00,0,none,true);
              arc(177231,177289,-1.12,-1.12,s,0.16,0.16,0,none,true);
              arc(177231,177289,2.22,2.22,s,0.20,0.20,0,none,true);
              arc(177231,177289,-0.93,-0.93,s,1.58,1.58,0,none,true);
              arc(177231,177289,2.05,2.05,s,1.61,1.61,0,none,true);
              arc(177259,177288,-0.63,-0.63,s,1.00,1.25,0,none,true);
              arc(177288,177317,-0.88,-0.75,s,2.00,1.50,0,none,true);
              arc(177288,177346,-0.63,-0.63,s,1.25,1.25,0,none,true);
              arc(177317,177346,-0.75,-0.63,s,1.50,1.25,0,none,true);
              arc(177462,177490,2.25,2.13,s,-0.25,0.00,1,none,true);
              arc(177462,177491,-1.06,-1.31,s,-0.13,-0.38,0,none,true);
              arc(177462,177519,-1.04,-1.04,s,0.78,0.78,0,none,true);
              arc(177462,177519,2.25,2.38,s,-0.25,-1.00,1,none,true);
              arc(177462,177519,-0.90,-0.90,s,1.01,1.01,0,none,true);
              arc(177462,177519,2.32,2.32,s,0.67,0.67,0,none,true);
              arc(177462,177519,1.66,1.66,s,1.67,1.67,0,none,true);
              arc(177462,177520,-1.06,-1.13,s,-0.13,-0.50,0,none,true);
              arc(177490,177519,2.13,2.13,s,0.00,-0.25,1,none,true);
              arc(177491,177520,-1.31,-1.25,s,-0.38,-0.50,0,none,true);
              arc(177519,177548,2.38,2.25,s,-1.00,-0.50,1,none,true);
              arc(177519,177577,2.13,2.13,s,-0.25,-0.25,1,none,true);
              arc(177520,177549,-1.25,-1.38,s,-0.50,-0.88,0,none,true);
              arc(177520,177578,-1.13,-1.00,s,-0.50,-0.50,0,none,true);
              arc(177548,177577,2.25,2.13,s,-0.50,-0.25,1,none,true);
              arc(177549,177578,-1.38,-1.00,s,-0.88,-0.50,0,none,true);
              arc(177692,177720,1.75,1.63,s,1.25,1.00,1,none,true);
              arc(177692,177749,1.75,1.88,s,1.25,2.00,1,none,true);
              arc(177693,177750,1.61,1.61,s,-0.11,-0.11,0,none,true);
              arc(177693,177750,-0.86,-0.86,s,1.99,1.99,0,none,true);
              arc(177693,177750,-1.16,-1.16,s,1.19,1.19,0,none,true);
              arc(177693,177750,1.80,1.80,s,0.22,0.22,0,none,true);
              arc(177720,177749,1.63,1.63,s,1.00,1.25,1,none,true);
              arc(177749,177778,1.88,1.75,s,2.00,1.50,1,none,true);
              arc(177749,177807,1.63,1.63,s,1.25,1.25,1,none,true);
              arc(177778,177807,1.75,1.63,s,1.50,1.25,1,none,true);
              arc(177923,177951,-1.25,-1.13,s,-0.25,0.00,0,none,true);
              arc(177923,177980,-1.25,-1.38,s,-0.25,-1.00,0,none,true);
              arc(177923,177981,-1.05,-1.05,s,1.41,1.41,0,none,true);
              arc(177923,177981,2.47,2.47,s,1.90,1.90,0,none,true);
              arc(177923,177981,-0.75,-0.75,s,1.99,1.99,0,none,true);
              arc(177923,177981,1.84,1.84,s,1.99,1.99,0,none,true);
              arc(177924,177953,2.41,2.19,s,-0.63,-0.56,1,none,true);
              arc(177924,177982,2.41,2.16,s,-0.63,-0.38,1,none,true);
              arc(177951,177980,-1.13,-1.13,s,0.00,-0.25,0,none,true);
              arc(177953,177982,2.19,1.94,s,-0.56,-0.63,1,none,true);
              arc(177980,178009,-1.38,-1.25,s,-1.00,-0.50,0,none,true);
              arc(177980,178038,-1.13,-1.13,s,-0.25,-0.25,0,none,true);
              arc(177982,178011,1.94,2.03,s,-0.63,-0.38,1,none,true);
              arc(177982,178040,2.16,1.91,s,-0.38,-0.19,1,none,true);
              arc(178009,178038,-1.25,-1.13,s,-0.50,-0.25,0,none,true);
              arc(178011,178040,2.03,1.91,s,-0.38,-0.19,1,none,true);
              arc(178154,178183,-0.91,-0.69,s,1.63,1.56,0,none,true);
              arc(178154,178212,-0.94,-0.94,s,1.33,1.33,0,none,true);
              arc(178154,178212,-0.93,-0.93,s,0.96,0.96,0,none,true);
              arc(178154,178212,2.09,2.09,s,0.12,0.12,0,none,true);
              arc(178154,178212,2.10,2.10,s,-0.03,-0.03,0,none,true);
              arc(178154,178212,-0.91,-0.66,s,1.63,1.38,0,none,true);
              arc(178183,178212,-0.69,-0.44,s,1.56,1.63,0,none,true);
              arc(178212,178241,-0.44,-0.53,s,1.63,1.38,0,none,true);
              arc(178212,178270,-0.66,-0.41,s,1.38,1.19,0,none,true);
              arc(178241,178270,-0.53,-0.41,s,1.38,1.19,0,none,true);
              arc(178385,178414,-1.06,-1.31,s,-0.13,-0.38,0,none,true);
              arc(178385,178443,-0.79,-0.79,s,-0.13,-0.13,0,none,true);
              arc(178385,178443,1.60,1.60,s,1.54,1.54,0,none,true);
              arc(178385,178443,-1.27,-1.27,s,-0.14,-0.14,0,none,true);
              arc(178385,178443,-1.06,-1.13,s,-0.13,-0.50,0,none,true);
              arc(178385,178443,2.11,2.11,s,1.67,1.67,0,none,true);
              arc(178414,178443,-1.31,-1.25,s,-0.38,-0.50,0,none,true);
              arc(178443,178472,-1.25,-1.38,s,-0.50,-0.88,0,none,true);
              arc(178443,178501,-1.13,-1.00,s,-0.50,-0.50,0,none,true);
              arc(178472,178501,-1.38,-1.00,s,-0.88,-0.50,0,none,true);
              arc(178616,178645,2.06,2.31,s,1.13,1.38,1,none,true);
              arc(178616,178645,2.41,2.19,s,-0.63,-0.56,1,none,true);
              arc(178616,178673,-0.57,-0.57,s,1.40,1.40,0,none,true);
              arc(178616,178673,-0.56,-0.56,s,1.13,1.13,0,none,true);
              arc(178616,178673,1.56,1.56,s,1.18,1.18,0,none,true);
              arc(178616,178673,1.90,1.90,s,1.89,1.89,0,none,true);
              arc(178616,178674,2.41,2.16,s,-0.63,-0.38,1,none,true);
              arc(178616,178674,2.06,2.13,s,1.13,1.50,1,none,true);
              arc(178645,178674,2.19,1.94,s,-0.56,-0.63,1,none,true);
              arc(178645,178674,2.31,2.25,s,1.38,1.50,1,none,true);
              arc(178674,178703,2.25,2.38,s,1.50,1.88,1,none,true);
              arc(178674,178703,1.94,2.03,s,-0.63,-0.38,1,none,true);
              arc(178674,178732,2.13,2.00,s,1.50,1.50,1,none,true);
              arc(178674,178732,2.16,1.91,s,-0.38,-0.19,1,none,true);
              arc(178703,178732,2.03,1.91,s,-0.38,-0.19,1,none,true);
              arc(178703,178732,2.38,2.00,s,1.88,1.50,1,none,true);
              arc(178846,178904,-0.95,-0.95,s,1.62,1.62,0,none,true);
              arc(178846,178904,1.84,1.84,s,1.44,1.44,0,none,true);
              arc(178846,178904,1.71,1.71,s,0.18,0.18,0,none,true);
              arc(178846,178904,-0.82,-0.82,s,1.37,1.37,0,none,true);
              arc(178847,178876,-0.56,-0.81,s,1.13,1.38,0,none,true);
              arc(178847,178905,-0.56,-0.63,s,1.13,1.50,0,none,true);
              arc(178876,178905,-0.81,-0.75,s,1.38,1.50,0,none,true);
              arc(178905,178934,-0.75,-0.88,s,1.50,1.88,0,none,true);
              arc(178905,178963,-0.63,-0.50,s,1.50,1.50,0,none,true);
              arc(178934,178963,-0.88,-0.50,s,1.88,1.50,0,none,true);
              arc(179077,179105,1.75,1.63,s,1.25,1.00,1,none,true);
              arc(179077,179134,1.75,1.88,s,1.25,2.00,1,none,true);
              arc(179077,179135,1.93,1.93,s,1.58,1.58,1,none,true);
              arc(179077,179135,2.12,2.12,s,0.16,0.16,1,none,true);
              arc(179077,179135,-1.05,-1.05,s,1.61,1.61,1,none,true);
              arc(179077,179135,-1.22,-1.22,s,0.20,0.20,1,none,true);
              arc(179105,179134,1.63,1.63,s,1.00,1.25,1,none,true);
              arc(179134,179163,1.88,1.75,s,2.00,1.50,1,none,true);
              arc(179134,179192,1.63,1.63,s,1.25,1.25,1,none,true);
              arc(179163,179192,1.75,1.63,s,1.50,1.25,1,none,true);
              arc(179308,179336,-1.25,-1.13,s,-0.25,0.00,0,none,true);
              arc(179308,179337,2.06,2.31,s,-0.13,-0.38,1,none,true);
              arc(179308,179365,-0.66,-0.66,s,1.67,1.67,1,none,true);
              arc(179308,179365,-1.25,-1.38,s,-0.25,-1.00,0,none,true);
              arc(179308,179365,-1.32,-1.32,s,0.67,0.67,1,none,true);
              arc(179308,179365,2.04,2.04,s,0.78,0.78,1,none,true);
              arc(179308,179365,1.90,1.90,s,1.01,1.01,1,none,true);
              arc(179308,179366,2.06,2.13,s,-0.13,-0.50,1,none,true);
              arc(179336,179365,-1.13,-1.13,s,0.00,-0.25,0,none,true);
              arc(179337,179366,2.31,2.25,s,-0.38,-0.50,1,none,true);
              arc(179365,179394,-1.38,-1.25,s,-1.00,-0.50,0,none,true);
              arc(179365,179423,-1.13,-1.13,s,-0.25,-0.25,0,none,true);
              arc(179366,179395,2.25,2.38,s,-0.50,-0.88,1,none,true);
              arc(179366,179424,2.13,2.00,s,-0.50,-0.50,1,none,true);
              arc(179394,179423,-1.25,-1.13,s,-0.50,-0.25,0,none,true);
              arc(179395,179424,2.38,2.00,s,-0.88,-0.50,1,none,true);
              arc(179538,179566,-0.75,-0.63,s,1.25,1.00,0,none,true);
              arc(179538,179595,-0.75,-0.88,s,1.25,2.00,0,none,true);
              arc(179539,179596,-0.80,-0.80,s,0.22,0.22,1,none,true);
              arc(179539,179596,2.16,2.16,s,1.19,1.19,1,none,true);
              arc(179539,179596,-0.61,-0.61,s,-0.11,-0.11,1,none,true);
              arc(179539,179596,1.86,1.86,s,1.99,1.99,1,none,true);
              arc(179566,179595,-0.63,-0.63,s,1.00,1.25,0,none,true);
              arc(179595,179624,-0.88,-0.75,s,2.00,1.50,0,none,true);
              arc(179595,179653,-0.63,-0.63,s,1.25,1.25,0,none,true);
              arc(179624,179653,-0.75,-0.63,s,1.50,1.25,0,none,true);
              arc(179769,179797,2.25,2.13,s,-0.25,0.00,1,none,true);
              arc(179769,179826,2.25,2.38,s,-0.25,-1.00,1,none,true);
              arc(179769,179827,1.75,1.75,s,1.99,1.99,1,none,true);
              arc(179769,179827,2.05,2.05,s,1.41,1.41,1,none,true);
              arc(179769,179827,-0.84,-0.84,s,1.99,1.99,1,none,true);
              arc(179769,179827,-1.47,-1.47,s,1.90,1.90,1,none,true);
              arc(179770,179799,-1.41,-1.19,s,-0.63,-0.56,0,none,true);
              arc(179770,179828,-1.41,-1.16,s,-0.63,-0.38,0,none,true);
              arc(179797,179826,2.13,2.13,s,0.00,-0.25,1,none,true);
              arc(179799,179828,-1.19,-0.94,s,-0.56,-0.63,0,none,true);
              arc(179826,179855,2.38,2.25,s,-1.00,-0.50,1,none,true);
              arc(179826,179884,2.13,2.13,s,-0.25,-0.25,1,none,true);
              arc(179828,179857,-0.94,-1.03,s,-0.63,-0.38,0,none,true);
              arc(179828,179886,-1.16,-0.91,s,-0.38,-0.19,0,none,true);
              arc(179855,179884,2.25,2.13,s,-0.50,-0.25,1,none,true);
              arc(179857,179886,-1.03,-0.91,s,-0.38,-0.19,0,none,true);
              arc(180000,180029,1.91,1.69,s,1.63,1.56,1,none,true);
              arc(180000,180058,1.93,1.93,s,0.96,0.96,1,none,true);
              arc(180000,180058,1.91,1.66,s,1.63,1.38,1,none,true);
              arc(180000,180058,-1.09,-1.09,s,0.12,0.12,1,none,true);
              arc(180000,180058,-1.10,-1.10,s,-0.03,-0.03,1,none,true);
              arc(180000,180058,1.94,1.94,s,1.33,1.33,1,none,true);
              arc(180029,180058,1.69,1.44,s,1.56,1.63,1,none,true);
              arc(180058,180087,1.44,1.53,s,1.63,1.38,1,none,true);
              arc(180058,180116,1.66,1.41,s,1.38,1.19,1,none,true);
              arc(180087,180116,1.53,1.41,s,1.38,1.19,1,none,true);
              arc(180231,180260,2.06,2.31,s,-0.13,-0.38,1,none,true);
              arc(180231,180289,2.27,2.27,s,-0.14,-0.14,1,none,true);
              arc(180231,180289,-0.60,-0.60,s,1.54,1.54,1,none,true);
              arc(180231,180289,2.06,2.13,s,-0.13,-0.50,1,none,true);
              arc(180231,180289,1.79,1.79,s,-0.13,-0.13,1,none,true);
              arc(180231,180289,-1.11,-1.11,s,1.67,1.67,1,none,true);
              arc(180260,180289,2.31,2.25,s,-0.38,-0.50,1,none,true);
              arc(180289,180318,2.25,2.38,s,-0.50,-0.88,1,none,true);
              arc(180289,180347,2.13,2.00,s,-0.50,-0.50,1,none,true);
              arc(180318,180347,2.38,2.00,s,-0.88,-0.50,1,none,true);
              arc(180462,180491,-1.06,-1.31,s,1.13,1.38,0,none,true);
              arc(180462,180491,-1.41,-1.19,s,-0.63,-0.56,0,none,true);
              arc(180462,180519,1.57,1.57,s,1.40,1.40,1,none,true);
              arc(180462,180519,1.56,1.56,s,1.13,1.13,1,none,true);
              arc(180462,180519,-0.90,-0.90,s,1.89,1.89,1,none,true);
              arc(180462,180519,-0.56,-0.56,s,1.18,1.18,1,none,true);
              arc(180462,180520,-1.41,-1.16,s,-0.63,-0.38,0,none,true);
              arc(180462,180520,-1.06,-1.13,s,1.13,1.50,0,none,true);
              arc(180491,180520,-1.31,-1.25,s,1.38,1.50,0,none,true);
              arc(180491,180520,-1.19,-0.94,s,-0.56,-0.63,0,none,true);
              arc(180520,180549,-0.94,-1.03,s,-0.63,-0.38,0,none,true);
              arc(180520,180549,-1.25,-1.38,s,1.50,1.88,0,none,true);
              arc(180520,180578,-1.16,-0.91,s,-0.38,-0.19,0,none,true);
              arc(180520,180578,-1.13,-1.00,s,1.50,1.50,0,none,true);
              arc(180549,180578,-1.38,-1.00,s,1.88,1.50,0,none,true);
              arc(180549,180578,-1.03,-0.91,s,-0.38,-0.19,0,none,true);
              arc(180692,180750,-0.71,-0.71,s,0.18,0.18,1,none,true);
              arc(180692,180750,-0.84,-0.84,s,1.44,1.44,1,none,true);
              arc(180692,180750,1.82,1.82,s,1.37,1.37,1,none,true);
              arc(180692,180750,1.95,1.95,s,1.62,1.62,1,none,true);
              arc(180693,180722,1.56,1.81,s,1.13,1.38,1,none,true);
              arc(180693,180751,1.56,1.63,s,1.13,1.50,1,none,true);
              arc(180722,180751,1.81,1.75,s,1.38,1.50,1,none,true);
              arc(180751,180780,1.75,1.88,s,1.50,1.88,1,none,true);
              arc(180751,180809,1.63,1.50,s,1.50,1.50,1,none,true);
              arc(180780,180809,1.88,1.50,s,1.88,1.50,1,none,true);
            };
            """.trimIndent()
        )
    }

    @Test
    fun `antlr playground`() {
        val properties = """
            key1=1
            key2=22
            key3=three
        """.trimIndent()
        val stream = CharStreams.fromString(properties)
        val lexer = PropertiesLexer(stream)
        val tokens = CommonTokenStream(lexer)
        val parser = PropertiesParser(tokens)

        val list = mutableListOf<Pair<String, String>>()

        while (parser.currentToken.type != PropertiesParser.EOF) {
            val nextLine = parser.line()
            val kw = nextLine.keyValue()
            val key = kw.key().text
            val value = kw.separatorAndValue().chars()
                .joinToString(separator = "") {
                    it.text
                }

            list.add(key to value)
        }
        assertEquals(
            list, mutableListOf(
                "key1" to "1",
                "key2" to "22",
                "key3" to "three"
            )
        )
    }


}